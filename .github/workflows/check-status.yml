name: Check Status

on:
  pull_request:
    types:
      - labeled

jobs:
  check-status:
    runs-on: ubuntu-latest
    if: github.event.pull_request.user.login == 'dependabot[bot]' && contains(github.event.pull_request.labels.*.name, 'automerge')
    steps:
      - name: Check if PR checks have passed
        id: status
        uses: actions/github-script@v6
        with:
          token: ${{ secrets.PAT_TOKEN }}
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            // Get the list of required status checks for the base branch
            const branchProtection = await github.rest.repos.getBranchProtection({
              owner: context.repo.owner,
              repo: context.repo.repo,
              branch: pr.data.base.ref
            });

            const requiredStatusChecks = branchProtection.data.required_status_checks.contexts || [];

            // Get the list of statuses for the PR's head commit
            const checks = await github.rest.checks.listForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: pr.data.head.sha
            });

            const passedCheckNames = checks.data.check_runs
              .filter(check => check.conclusion === 'success')
              .map(check => check.name);

            // Check if all required statuses have passed
            for (const status of requiredStatusChecks) {
              if (!passedCheckNames.includes(status)) {
                return `Required status check '${status}' not passed.`;
              }
            }

            return 'All required status checks have passed.';

      - name: Set output
        run: echo "status=${{ steps.status.outputs.result }}" >> $GITHUB_ENV

    outputs:
      status: ${{ steps.status.outputs.result }}
